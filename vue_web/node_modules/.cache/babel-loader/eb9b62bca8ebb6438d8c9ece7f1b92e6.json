{"remainingRequest":"D:\\works\\stamp_station\\vue_web\\node_modules\\babel-loader\\lib\\index.js!D:\\works\\stamp_station\\vue_web\\src\\main.js","dependencies":[{"path":"D:\\works\\stamp_station\\vue_web\\src\\main.js","mtime":1565791055533},{"path":"D:\\works\\stamp_station\\vue_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1565365278329},{"path":"D:\\works\\stamp_station\\vue_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1565365278089}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; // 引入第三方jquery组件\n\nimport $ from 'jquery';\nwindow.$ = $;\nwindow.jQuery = $;\nexport default $; // 引入第三方组件库mintui\n// 1.完整引入mint-ui组件中的所有组件\n\nimport MintUI from \"mint-ui\"; // 2.单独引入mint-ui组件库中的样式文件\n\nimport 'mint-ui/lib/style.css'; // 3.将MintUI注册给Vue实例\n\nVue.use(MintUI); // 4.将字体图标引入到当前的项目中\n\nimport \"./font/iconfont.css\"; // 5.引入axios第三方ajax模块\n\nimport axios from 'axios'; // 6.配置axios基础路径，用于请求服务器端数据\n\naxios.defaults.baseURL = \"http://127.0.0.1:5000/\"; // 7.配置axios 保存session信息\n\naxios.defaults.withCredentials = true; // 8.将axios注册vue实例中。由于axios不支持use()，所以只能将实例添加到vue的原型上\n\nVue.prototype.axios = axios; // 9.引入Vuex\n\nimport Vuex from \"vuex\"; // 10.注册Vuex\n\nVue.use(Vuex); // 11.创建Vuex存储实例对象store\n\nvar store = new Vuex.Store({\n  state: {\n    carCount: 0\n  },\n  mutations: {\n    increment(state) {\n      // 购物车数量加1\n      state.carCount++;\n    },\n\n    clear(state) {\n      // 清空购物车\n      state.carCount = 0;\n    }\n\n  },\n  getters: {\n    getCartCount(state) {\n      return state.carCount;\n    }\n\n  },\n  actions: {}\n});\nVue.config.productionTip = false;\nimport './components/stamp_station/css/my_rest.css'; // 加载自定义的全局样式\n\nimport './components/stamp_station/js/jquery-3.2.1.js'; //31: 设置请求的根路径 \n// Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//32:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n// import './lib/mui/css/mui.css'\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css';\nnew Vue({\n  router,\n  render: h => h(App),\n  // App指App.vue根组件\n  store // 12.将实例对象store添加到Vue对象中\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","$","window","jQuery","MintUI","use","axios","defaults","baseURL","withCredentials","prototype","Vuex","store","Store","state","carCount","mutations","increment","clear","getters","getCartCount","actions","config","productionTip","render","h","$mount"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACAC,OAAOD,CAAP,GAAWA,CAAX;AACAC,OAAOC,MAAP,GAAgBF,CAAhB;AACA,eAAeA,CAAf,C,CAEA;AACA;;AACA,OAAOG,MAAP,MAAmB,SAAnB,C,CACA;;AACA,OAAO,uBAAP,C,CACA;;AACAN,IAAIO,GAAJ,CAAQD,MAAR,E,CACA;;AACA,OAAO,qBAAP,C,CACA;;AACA,OAAOE,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,OAAf,GAAuB,wBAAvB,C,CACA;;AACAF,MAAMC,QAAN,CAAeE,eAAf,GAA+B,IAA/B,C,CACA;;AACAX,IAAIY,SAAJ,CAAcJ,KAAd,GAAoBA,KAApB,C,CACA;;AACA,OAAOK,IAAP,MAAiB,MAAjB,C,CACA;;AACAb,IAAIO,GAAJ,CAAQM,IAAR,E,CACA;;AACA,IAAIC,QAAM,IAAID,KAAKE,KAAT,CAAe;AACvBC,SAAM;AAACC,cAAS;AAAV,GADiB;AAEvBC,aAAU;AACRC,cAAUH,KAAV,EAAgB;AAAG;AACjBA,YAAMC,QAAN;AACD,KAHO;;AAIRG,UAAMJ,KAAN,EAAY;AAAG;AACbA,YAAMC,QAAN,GAAe,CAAf;AACD;;AANO,GAFa;AAUvBI,WAAQ;AACNC,iBAAaN,KAAb,EAAmB;AACjB,aAAOA,MAAMC,QAAb;AACD;;AAHK,GAVe;AAevBM,WAAQ;AAfe,CAAf,CAAV;AAkBAvB,IAAIwB,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,OAAO,4CAAP,C,CAAqD;;AACrD,OAAO,+CAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,+BAAP;AAEA,IAAIzB,GAAJ,CAAQ;AACNE,QADM;AAENwB,UAAQC,KAAKA,EAAE1B,GAAF,CAFP;AAEgB;AACtBa,OAHM,CAGE;;AAHF,CAAR,EAIGc,MAJH,CAIU,MAJV","sourceRoot":"D:\\works\\stamp_station\\vue_web","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n// 引入第三方jquery组件\r\nimport $ from 'jquery'\r\nwindow.$ = $\r\nwindow.jQuery = $\r\nexport default $\r\n\r\n// 引入第三方组件库mintui\r\n// 1.完整引入mint-ui组件中的所有组件\r\nimport MintUI from \"mint-ui\"\r\n// 2.单独引入mint-ui组件库中的样式文件\r\nimport 'mint-ui/lib/style.css'\r\n// 3.将MintUI注册给Vue实例\r\nVue.use(MintUI)\r\n// 4.将字体图标引入到当前的项目中\r\nimport \"./font/iconfont.css\"\r\n// 5.引入axios第三方ajax模块\r\nimport axios from 'axios'\r\n// 6.配置axios基础路径，用于请求服务器端数据\r\naxios.defaults.baseURL=\"http://127.0.0.1:5000/\"\r\n// 7.配置axios 保存session信息\r\naxios.defaults.withCredentials=true;\r\n// 8.将axios注册vue实例中。由于axios不支持use()，所以只能将实例添加到vue的原型上\r\nVue.prototype.axios=axios;\r\n// 9.引入Vuex\r\nimport Vuex from \"vuex\"\r\n// 10.注册Vuex\r\nVue.use(Vuex)\r\n// 11.创建Vuex存储实例对象store\r\nvar store=new Vuex.Store({\r\n  state:{carCount:0},\r\n  mutations:{\r\n    increment(state){  // 购物车数量加1\r\n      state.carCount++;\r\n    },\r\n    clear(state){  // 清空购物车\r\n      state.carCount=0;\r\n    }\r\n  },\r\n  getters:{\r\n    getCartCount(state){\r\n      return state.carCount\r\n    }\r\n  },\r\n  actions:{}\r\n})\r\n\r\nVue.config.productionTip = false\r\n\r\nimport './components/stamp_station/css/my_rest.css'  // 加载自定义的全局样式\r\nimport './components/stamp_station/js/jquery-3.2.1.js'\r\n\r\n//31: 设置请求的根路径 \r\n// Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//32:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\n// import './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),  // App指App.vue根组件\r\n  store   // 12.将实例对象store添加到Vue对象中\r\n}).$mount('#app')\r\n"]}]}